generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model inventory {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id  String   @db.Uuid
  pharmacy_id String   @db.Uuid
  quantity    Int?
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  pharmacy    pharmacy @relation(fields: [pharmacy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product     product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model order {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  total_price Int?
  status      String?      @db.VarChar(255)
  user_id     String       @db.Uuid
  pharmacy_id String       @db.Uuid
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  pharmacy    pharmacy     @relation(fields: [pharmacy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_item  order_item[]
}

model order_item {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  quantity   Int?
  price      Int?
  product_id String   @db.Uuid
  order_id   String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  order      order    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product    product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model pharmacy {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?     @db.VarChar(255)
  address     String?     @db.VarChar(255)
  city        String?     @db.VarChar(255)
  state       String?     @db.VarChar(255)
  zip_code    String?     @db.VarChar(10)
  name        String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  user_id     String      @db.Uuid
  tenant_id   String      @db.VarChar(255)
  inventory   inventory[]
  order       order[]
  user        user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product     product[]
}

model product {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String       @db.VarChar(255)
  description String?      @db.VarChar(255)
  price       Int?
  quantity    Int?
  pharmacy_id String       @db.Uuid
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  inventory   inventory[]
  order_item  order_item[]
  pharmacy    pharmacy     @relation(fields: [pharmacy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  order       order[]
  pharmacy    pharmacy[]
}
